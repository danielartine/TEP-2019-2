#include <bits/stdc++.h>

using namespace std;

int vals[1000], pesos[1000], n, tam, memo[1000][1000];

int knapsack(int tam, int pesos[], int vals[], int n){

    if(tam<=0 or n<=0)
        return 0;

    if (memo[n][tam] != -1)
        return memo[n][tam];

    if(pesos[n-1] > tam)
        return memo[n][tam] = knapsack(tam, pesos, vals, n-1);
    else
        return memo[n][tam] = max (knapsack(tam, pesos, vals,n-1), vals[n-1]+knapsack(tam-pesos[n-1], pesos, vals, n-1));
}


int main() {

    scanf("%d", &n);
    scanf("%d", &tam);
    
    for(int i = 0 ; i < 1000 ; i++)
        for(int j = 0 ; j < 1000 ; j++)
            memo[i][j] = -1;

    for(int i = 0 ; i < n ; i ++)
        scanf("%d %d",&vals[i], &pesos[i]);

    printf("%d\n", knapsack(tam, pesos, vals, n));
}

/*Casos testados:

1)
3 50
60 10
100 20
120 30

Rodou sem problemas e rápido.

2)
10 50
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10

Também não houveram problemas performáticos.

3)
99 200
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30
60 10
100 20
120 30

Cálculo feito sem problemas.



4)

200 300
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10
 100 20
 120 30
 60 10

 Sem problemas.

*/

